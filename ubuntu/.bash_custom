#!/bin/bash

# Source this file either in .bashrc or .bash_profile (based on your terminal)

# Set environment variables
export TERM=xterm-color
export GIT_EDITOR=nvim
export PATH=${HOME}/.cargo/bin:${HOME}/.local/bin/:~/Scripts/:$PATH

# prompt
#if [ -z ${AWS_ROLE+x} ]; then CUSTOM_PROMPT="$AWS_ROLE"; else CUSTOM_PROMPT="\u"; fi

# this this is false or true
[ -z $AWS_ROLE_ARN ] && CUSTOM_PROMPT="\u" || CUSTOM_PROMPT="$AWS_ROLE_ARN ($AWS_REGION)"

# Prompt with reset
# \033[ ... m is the wrapper for the prompt decoration
# The decoration is background, format, and foreground separated by ;
# See the sample below and play around yourself
# Format: 0 = normal, 1 = bold, 4 = underlined
# Foreground color is 3x, where x = 0-7
# Background color is 4x, where x = 0-7
# Need to enclose each color with \[ ... \] if you are using single quote, otherwise the history display will be bugged
RED='\[\033[1;31m\]'
YELLOW='\[\033[1;33m\]'
CYAN='\[\033[1;36m\]'
RESET_COLOR='\[\033[m\]'
PS1="\n${CYAN}$(echo $CUSTOM_PROMPT): ${RESET_COLOR} ${YELLOW}\w \$(__git_ps1) \n${RESET_COLOR}â†’ "

if [ -f ${HOME}/.bash.d/git-prompt.sh ]; then
  source ${HOME}/.bash.d/git-prompt.sh
fi

#PS1="${cyan}[\u@\h$([[ -n $AWS_ROLE ]] && echo  $AWS_ROLE) \W$(__git_ps1  (%s))]\$ "

# bash-my-aws
BASH_MY_AWS_FOLDER="$HOME/Programs/bash-my-aws"
for f in ${BASH_MY_AWS_FOLDER}/lib/*-functions; do source $f; done
source ${BASH_MY_AWS_FOLDER}/bash_completion.sh

# Set aliases
alias dnuke='docker kill $(docker ps -q);docker rm $(docker ps -a -q);docker rmi -f $(docker images -q -f dangling=true);docker rmi -f $(docker images -q);docker volume rm -f $(docker volume ls -q)'
alias update-ubuntu='sudo apt update && sudo apt upgrade && sudo apt autoremove && sudo apt autoclean'
alias lockscreen="gnome-screensaver-command -a"   

# enable siji font for polybar
# xset +fp /home/joe/.local/share/fonts
# xset fp rehash

# Pywal, load from cache
cat ~/.cache/wal/sequences

# custom function
function git-web ()
{
  if [ -z $1 ]; then
    echo "Remote name needed! Usage: git-web [origin]"
    return -1
  fi

  if [ -z $(git remote get-url $1) ]; then
    echo "Cannot find remote $1, available remotes are:"
    git remote -v

    return -1
  fi

  xdg-open "https://$( git remote get-url $1 | awk -F '@' '{print $2}' | sed -e s/:/\\// | sed '/^\s*$/d' | awk -F '.git' '{print $1}')"
}

function aws-console {
  if [ -z ${AWS_ROLE} ]; then
    echo "No AWS_ROLE found. Are you authenticated?"
    return
  fi

  USER_DATA_DIR=/tmp/chrome-profile-$AWS_ROLE
  mkdir -p "${USER_DATA_DIR}"
#  /snap/bin/chromium --new --args --profile-directory="${USER_DATA_DIR}" --incognito $(aws-console-url)
  xdg-open $(aws-console-url)
}

# Search folder for files with fzf
# usage `search-file .`
function search-file() {
  find $1 | fzf-tmux
}

# Check S3 total objects and the size given an s3 Prefix
# e.g. aws3du s3://my-bucket/my-prefix
function aws3du(){
  bucket=`cut -d/ -f3 <<< $1`
  prefix=`awk -F/ '{for (i=4; i<NF; i++) printf $i"/"; print $NF}' <<< $1`
  aws s3api \
    list-objects \
    --bucket $bucket \
    --prefix=$prefix \
    --output text \
    --query '[sum(Contents[].Size), length(Contents[])]' \
    | while read -r size num_objects; do
      jq '. |{ size:.[0],num_objects: .[1]}' <<< "[\"$(numfmt --to=si ${size})\",${num_objects}]"
     done
}


# bspwm intellij potential fix
export _JAVA_AWT_WM_NONREPARENTING=1

